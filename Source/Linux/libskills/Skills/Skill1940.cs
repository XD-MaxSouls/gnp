using System;
using System.Text;

namespace SKILL
{
	public class GSkill1940Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				skill.SetRatio(1.75f);
				player.SetPerform(1);
			}
		}
		public GSkill1940Stub()
			: base(1940)
		{
			occupation = 151;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = false;
			dobless = false;
			autoattack = true;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_猛击");
			SetAction(1,"青云门_猛击");
			SetAction(2,"鬼王宗_猛击");
			SetAction(3,"合欢派_猛击");
			SetAction(4,"天音寺_猛击");
			SetAction(5,"鬼道_猛击");
			SetAction(6,"焚香_猛击");
			SetAction(7,"兽神_猛击");
			SetAction(8,"狐妖_猛击");
			SetAction(9,"轩辕_猛击");
			SetAction(10,"怀光_猛击");
			SetAction(11,"太昊_猛击");
			SetAction(12,"天华_猛击");
			SetAction(13,"灵夙_猛击");
			SetAction(14,"英招_猛击");
			SetAction(15,"元素大师_猛击");
			SetAction(16,"元素大师_猛击");
			SetAction(17,"天音寺_猛击");
			SetAction(18,"鬼王宗_骑乘_猛击");
			SetAction(19,"青云门_骑乘_猛击");
			SetAction(20,"鬼王宗_骑乘_猛击");
			SetAction(21,"合欢派_骑乘_猛击");
			SetAction(22,"天音寺_骑乘_猛击");
			SetAction(23,"鬼道_骑乘_猛击");
			SetAction(24,"焚香_骑乘_猛击");
			SetAction(25,"兽神_骑乘_猛击");
			SetAction(26,"狐妖_骑乘_猛击");
			SetAction(27,"轩辕_骑乘_猛击");
			SetAction(28,"怀光_骑乘_猛击");
			SetAction(29,"太昊_骑乘_猛击");
			SetAction(30,"天华_骑乘_猛击");
			name = "猛击";
			nativename = "猛击";
			icon = "猛击.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 16000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 2.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 3.0f);
		}
	}
	public class GSkill1940 : GSkill
	{
		public GSkill1940()
			: base(1940)
		{
			
		}
	}
	public class GSkill1941Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill1941Stub()
			: base(1941)
		{
			occupation = 151;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 0;
			targettype = 0;
			rangetype = 5;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_还神");
			SetAction(1,"青云门_还神");
			SetAction(2,"鬼王宗_还神");
			SetAction(3,"合欢派_还神");
			SetAction(4,"天音寺_还神");
			SetAction(5,"鬼道_还神");
			SetAction(6,"焚香_还神");
			SetAction(7,"兽神_还神");
			SetAction(8,"狐妖_还神");
			SetAction(9,"轩辕_还神");
			SetAction(10,"怀光_还神");
			SetAction(11,"太昊_还神");
			SetAction(12,"天华_还神");
			SetAction(13,"灵夙_还神");
			SetAction(14,"英招_还神");
			SetAction(15,"元素大师_还神");
			SetAction(16,"元素大师_还神");
			SetAction(17,"天音寺_还神");
			SetAction(18,"鬼王宗_骑乘_还神");
			SetAction(19,"青云门_骑乘_还神");
			SetAction(20,"鬼王宗_骑乘_还神");
			SetAction(21,"合欢派_骑乘_还神");
			SetAction(22,"天音寺_骑乘_还神");
			SetAction(23,"鬼道_骑乘_还神");
			SetAction(24,"焚香_骑乘_还神");
			SetAction(25,"兽神_骑乘_还神");
			SetAction(26,"狐妖_骑乘_还神");
			SetAction(27,"轩辕_骑乘_还神");
			SetAction(28,"怀光_骑乘_还神");
			SetAction(29,"太昊_骑乘_还神");
			SetAction(30,"天华_骑乘_还神");
			name = "还神";
			nativename = "还神";
			icon = "还神.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 90000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_maxmp = player.GetMaxmp();

			victim.SetProbability(120.0f);
			victim.SetTime(20000.0f);
			victim.SetBuffid(1);
			victim.SetAmount(0.0f);
			victim.SetValue(((3 * player_maxmp)));
			victim.SetMpgen(true);
			return true;
		}
	}
	public class GSkill1941 : GSkill
	{
		public GSkill1941()
			: base(1941)
		{
			
		}
	}
	public class GSkill1942Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill1942Stub()
			: base(1942)
		{
			occupation = 151;
			maxlevel = 4;
			maxlearn = 4;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 3;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_散尽");
			SetAction(1,"青云门_散尽");
			SetAction(2,"鬼王宗_散尽");
			SetAction(3,"合欢派_散尽");
			SetAction(4,"天音寺_散尽");
			SetAction(5,"鬼道_散尽");
			SetAction(6,"焚香_散尽");
			SetAction(7,"兽神_散尽");
			SetAction(8,"狐妖_散尽");
			SetAction(9,"轩辕_散尽");
			SetAction(10,"怀光_散尽");
			SetAction(11,"太昊_散尽");
			SetAction(12,"天华_散尽");
			SetAction(13,"灵夙_散尽");
			SetAction(14,"英招_散尽");
			SetAction(15,"元素大师_散尽");
			SetAction(16,"元素大师_散尽");
			SetAction(17,"天音寺_散尽");
			SetAction(18,"鬼王宗_骑乘_散尽");
			SetAction(19,"青云门_骑乘_散尽");
			SetAction(20,"鬼王宗_骑乘_散尽");
			SetAction(21,"合欢派_骑乘_散尽");
			SetAction(22,"天音寺_骑乘_散尽");
			SetAction(23,"鬼道_骑乘_散尽");
			SetAction(24,"焚香_骑乘_散尽");
			SetAction(25,"兽神_骑乘_散尽");
			SetAction(26,"狐妖_骑乘_散尽");
			SetAction(27,"轩辕_骑乘_散尽");
			SetAction(28,"怀光_骑乘_散尽");
			SetAction(29,"太昊_骑乘_散尽");
			SetAction(30,"天华_骑乘_散尽");
			name = "散尽";
			nativename = "散尽";
			icon = "散尽.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 90000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 17.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 12.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 22.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(120.0f);
			victim.SetTime(60000.0f);
			victim.SetBuffid(1);
			victim.SetAmount(((18000 * (D2INT(skill_level / 4) + skill_level) + 18000)));
			victim.SetValue(0.0f);
			victim.SetMpleak(true);
			return true;
		}
	}
	public class GSkill1942 : GSkill
	{
		public GSkill1942()
			: base(1942)
		{
			
		}
	}
	public class GSkill1943Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				skill.SetRatio(2.2f);
				player.SetPerform(1);
			}
		}
		public GSkill1943Stub()
			: base(1943)
		{
			occupation = 151;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 2;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_鬼厉不凡");
			SetAction(1,"青云门_鬼厉不凡");
			SetAction(2,"鬼王宗_鬼厉不凡");
			SetAction(3,"合欢派_鬼厉不凡");
			SetAction(4,"天音寺_鬼厉不凡");
			SetAction(5,"鬼道_鬼厉不凡");
			SetAction(6,"焚香_鬼厉不凡");
			SetAction(7,"兽神_鬼厉不凡");
			SetAction(8,"狐妖_鬼厉不凡");
			SetAction(9,"轩辕_鬼厉不凡");
			SetAction(10,"怀光_鬼厉不凡");
			SetAction(11,"太昊_鬼厉不凡");
			SetAction(12,"天华_鬼厉不凡");
			SetAction(13,"灵夙_鬼厉不凡");
			SetAction(14,"英招_鬼厉不凡");
			SetAction(15,"元素大师_鬼厉不凡");
			SetAction(16,"元素大师_鬼厉不凡");
			SetAction(17,"天音寺_鬼厉不凡");
			SetAction(18,"鬼王宗_骑乘_鬼厉不凡");
			SetAction(19,"青云门_骑乘_鬼厉不凡");
			SetAction(20,"鬼王宗_骑乘_鬼厉不凡");
			SetAction(21,"合欢派_骑乘_鬼厉不凡");
			SetAction(22,"天音寺_骑乘_鬼厉不凡");
			SetAction(23,"鬼道_骑乘_鬼厉不凡");
			SetAction(24,"焚香_骑乘_鬼厉不凡");
			SetAction(25,"兽神_骑乘_鬼厉不凡");
			SetAction(26,"狐妖_骑乘_鬼厉不凡");
			SetAction(27,"轩辕_骑乘_鬼厉不凡");
			SetAction(28,"怀光_骑乘_鬼厉不凡");
			SetAction(29,"太昊_骑乘_鬼厉不凡");
			SetAction(30,"天华_骑乘_鬼厉不凡");
			name = "无为";
			nativename = "无为";
			icon = "鬼厉之不凡.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 90000;
		}
		public override float GetRadius(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(600.0f);
			victim.SetTime(6000.0f);
			victim.SetDizzy(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTime(15000.0f);
			victim.SetRatio(0.15000001f);
			victim.SetInccritrate(true);
			return true;
		}
	}
	public class GSkill1943 : GSkill
	{
		public GSkill1943()
			: base(1943)
		{
			
		}
	}
	public class GSkill1944Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				skill.SetRatio(2.2f);
				player.SetPerform(1);
			}
		}
		public GSkill1944Stub()
			: base(1944)
		{
			occupation = 151;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 2;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_雪琪之冰霜");
			SetAction(1,"青云门_雪琪之冰霜");
			SetAction(2,"鬼王宗_雪琪之冰霜");
			SetAction(3,"合欢派_雪琪之冰霜");
			SetAction(4,"天音寺_雪琪之冰霜");
			SetAction(5,"鬼道_雪琪之冰霜");
			SetAction(6,"焚香_雪琪之冰霜");
			SetAction(7,"兽神_雪琪之冰霜");
			SetAction(8,"狐妖_雪琪之冰霜");
			SetAction(9,"轩辕_雪琪之冰霜");
			SetAction(10,"怀光_雪琪之冰霜");
			SetAction(11,"太昊_雪琪之冰霜");
			SetAction(12,"天华_雪琪之冰霜");
			SetAction(13,"灵夙_雪琪之冰霜");
			SetAction(14,"英招_雪琪之冰霜");
			SetAction(15,"元素大师_雪琪之冰霜");
			SetAction(16,"元素大师_雪琪之冰霜");
			SetAction(17,"天音寺_雪琪之冰霜");
			SetAction(18,"鬼王宗_骑乘_雪琪之冰霜");
			SetAction(19,"青云门_骑乘_雪琪之冰霜");
			SetAction(20,"鬼王宗_骑乘_雪琪之冰霜");
			SetAction(21,"合欢派_骑乘_雪琪之冰霜");
			SetAction(22,"天音寺_骑乘_雪琪之冰霜");
			SetAction(23,"鬼道_骑乘_雪琪之冰霜");
			SetAction(24,"焚香_骑乘_雪琪之冰霜");
			SetAction(25,"兽神_骑乘_雪琪之冰霜");
			SetAction(26,"狐妖_骑乘_雪琪之冰霜");
			SetAction(27,"轩辕_骑乘_雪琪之冰霜");
			SetAction(28,"怀光_骑乘_雪琪之冰霜");
			SetAction(29,"太昊_骑乘_雪琪之冰霜");
			SetAction(30,"天华_骑乘_雪琪之冰霜");
			name = "含章";
			nativename = "含章";
			icon = "雪琪之冰霜.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 90000;
		}
		public override float GetRadius(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(600.0f);
			victim.SetTime(12000.0f);
			victim.SetWrap(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(120.0f);
			victim.SetTime(15000.0f);
			victim.SetRatio(0.99000001f);
			victim.SetBuffid(1);
			victim.SetIncskilldodge(true);
			return true;
		}
	}
	public class GSkill1944 : GSkill
	{
		public GSkill1944()
			: base(1944)
		{
			
		}
	}
	public class GSkill1945Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				skill.SetRatio(2.2f);
				player.SetPerform(1);
			}
		}
		public GSkill1945Stub()
			: base(1945)
		{
			occupation = 151;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 2;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 7;
			credittype = 0;
			clearmask = 0;
			skill_limit = 32;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"鬼王宗_碧瑶之挚爱");
			SetAction(1,"青云门_碧瑶之挚爱");
			SetAction(2,"鬼王宗_碧瑶之挚爱");
			SetAction(3,"合欢派_碧瑶之挚爱");
			SetAction(4,"天音寺_碧瑶之挚爱");
			SetAction(5,"鬼道_碧瑶之挚爱");
			SetAction(6,"焚香_碧瑶之挚爱");
			SetAction(7,"兽神_碧瑶之挚爱");
			SetAction(8,"狐妖_碧瑶之挚爱");
			SetAction(9,"轩辕_碧瑶之挚爱");
			SetAction(10,"怀光_碧瑶之挚爱");
			SetAction(11,"太昊_碧瑶之挚爱");
			SetAction(12,"天华_碧瑶之挚爱");
			SetAction(13,"灵夙_碧瑶之挚爱");
			SetAction(14,"英招_碧瑶之挚爱");
			SetAction(15,"元素大师_碧瑶之挚爱");
			SetAction(16,"元素大师_碧瑶之挚爱");
			SetAction(17,"天音寺_碧瑶之挚爱");
			SetAction(18,"鬼王宗_骑乘_碧瑶之挚爱");
			SetAction(19,"青云门_骑乘_碧瑶之挚爱");
			SetAction(20,"鬼王宗_骑乘_碧瑶之挚爱");
			SetAction(21,"合欢派_骑乘_碧瑶之挚爱");
			SetAction(22,"天音寺_骑乘_碧瑶之挚爱");
			SetAction(23,"鬼道_骑乘_碧瑶之挚爱");
			SetAction(24,"焚香_骑乘_碧瑶之挚爱");
			SetAction(25,"兽神_骑乘_碧瑶之挚爱");
			SetAction(26,"狐妖_骑乘_碧瑶之挚爱");
			SetAction(27,"轩辕_骑乘_碧瑶之挚爱");
			SetAction(28,"怀光_骑乘_碧瑶之挚爱");
			SetAction(29,"太昊_骑乘_碧瑶之挚爱");
			SetAction(30,"天华_骑乘_碧瑶之挚爱");
			name = "冲虚";
			nativename = "冲虚";
			icon = "碧瑶之挚爱.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 90000;
		}
		public override float GetRadius(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(600.0f);
			victim.SetTime(9000.0f);
			victim.SetSilent(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(120.0f);
			victim.SetTime(15000.0f);
			victim.SetRatio(0.33000001f);
			victim.SetDecdamage(true);
			return true;
		}
	}
	public class GSkill1945 : GSkill
	{
		public GSkill1945()
			: base(1945)
		{
			
		}
	}
	public class GSkill1946Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 500;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 300;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				skill.SetRatio(1.0f);
				skill.SetPlus(1.0f);
				player.SetPerform(1);
			}
		}
		public GSkill1946Stub()
			: base(1946)
		{
			occupation = 128;
			maxlevel = 10;
			maxlearn = 10;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"0");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"0");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "楚汉刀兵A";
			nativename = "楚汉刀兵A";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 800;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 1000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 10.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 6.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 14.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_level = skill.GetLevel();

			victim.SetRatio(((5 * ((norm((player_level + 0.05f) / 186.0f)) - norm((player_level + 0.05f) / 187.0f)))));
			victim.SetAmount(0.0f);
			victim.SetValue((((norm((player_level + 0.05f) / 169.0f)) - norm((player_level + 0.05f) / 170.0f))));
			victim.SetSecondattack(true);
			victim.SetProbability(((600 * norm(zrand(100) / (85 - 5 * skill_level)))));
			victim.SetTime(3000.0f);
			victim.SetWrap(true);
			return true;
		}
	}
	public class GSkill1946 : GSkill
	{
		public GSkill1946()
			: base(1946)
		{
			
		}
	}
	public class GSkill1947Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill1947Stub()
			: base(1947)
		{
			occupation = 128;
			maxlevel = 10;
			maxlearn = 10;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 5;
			timetype = 0;
			targettype = 0;
			rangetype = 2;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"0");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"0");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "楚汉刀兵B";
			nativename = "楚汉刀兵B";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 1000;
		}
		public override float GetRadius(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (4 * skill_level + 4);
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override int GetCoverage(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 4 * skill_level + 4;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(120.0f);
			victim.SetTime(((5000 * skill_level + 5000)));
			victim.SetRatio((skill_level * 0.15f + 0.1f));
			victim.SetAmount(0.0f);
			victim.SetValue(100.0f);
			victim.SetRetort(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(120.0f);
			victim.SetTime(((5000 * skill_level + 5000)));
			victim.SetRatio((skill_level * 0.15f + 0.1f));
			victim.SetAmount(0.0f);
			victim.SetValue(100.0f);
			victim.SetRetort(true);
			return true;
		}
	}
	public class GSkill1947 : GSkill
	{
		public GSkill1947()
			: base(1947)
		{
			
		}
	}
	public class GSkill1948Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill1948Stub()
			: base(1948)
		{
			occupation = 128;
			maxlevel = 10;
			maxlearn = 10;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 5;
			timetype = 0;
			targettype = 0;
			rangetype = 2;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"0");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"0");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "楚汉刀兵C";
			nativename = "楚汉刀兵C";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 1000;
		}
		public override float GetRadius(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (4 * skill_level + 4);
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override int GetCoverage(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 4 * skill_level + 4;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetTime(((10000 * skill_level + 10000)));
			victim.SetRatio((skill_level * 0.1f + 0.1f));
			victim.SetAmount(((10000 * skill_level + 10000)));
			victim.SetDechurt(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetTime(((10000 * skill_level + 10000)));
			victim.SetRatio((skill_level * 0.1f + 0.1f));
			victim.SetAmount(((10000 * skill_level + 10000)));
			victim.SetDechurt(true);
			return true;
		}
	}
	public class GSkill1948 : GSkill
	{
		public GSkill1948()
			: base(1948)
		{
			
		}
	}
	public class GSkill1949Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				skill_level = skill.GetLevel();

				skill.SetRatio((skill_level * 0.02f + 1.1f));
				skill.SetPlus(((skill_level * (skill_level * 9.9f)) - skill_level * 8.6f + 858.0f));
				player.SetPerform(1);
			}
		}
		public class GState3 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				skill_level = skill.GetLevel();

				skill.SetRatio((skill_level * 0.04f + 1.1f));
				skill.SetPlus(((skill_level * (skill_level * 9.9f)) - skill_level * 8.6f + 858.0f));
				player.SetPerform(0);
			}
		}
		public class GState4 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				skill_level = skill.GetLevel();

				skill.SetRatio((skill_level * 0.06f + 1.1f));
				skill.SetPlus(((skill_level * (skill_level * 9.9f)) - skill_level * 8.6f + 858.0f));
				player.SetPerform(0);
			}
		}
		public class GState5 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				skill_level = skill.GetLevel();

				skill.SetRatio((skill_level * 0.08f + 1.1f));
				skill.SetPlus(((skill_level * (skill_level * 9.9f)) - skill_level * 8.6f + 858.0f));
				player.SetPerform(0);
			}
		}
		public GSkill1949Stub()
			: base(1949)
		{
			occupation = 128;
			maxlevel = 10;
			maxlearn = 10;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"0");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"0");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "楚汉刀兵D";
			nativename = "楚汉刀兵D";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
			AddState(new GState3());
			AddState(new GState4());
			AddState(new GState5());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 6000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range + 10.0f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range + 3.0f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range + 10.0f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(((600 * norm(zrand(100) / (95 - 5 * skill_level)))));
			victim.SetTime(3000.0f);
			victim.SetWrap(true);
			victim.SetRatio(((2 * ((norm((player_level + 0.05f) / 186.0f)) - norm((player_level + 0.05f) / 187.0f)))));
			victim.SetAmount(0.0f);
			victim.SetValue((((norm((player_level + 0.05f) / 186.0f)) - norm((player_level + 0.05f) / 187.0f))));
			victim.SetSecondattack(true);
			return true;
		}
	}
	public class GSkill1949 : GSkill
	{
		public GSkill1949()
			: base(1949)
		{
			
		}
	}
}
