using System;
using System.Text;

namespace SKILL
{
	public class GSkill450Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();

				skill.SetRatio((D2INT(player_level / (12 - skill_level)) * 0.01f + (skill_t0 * 0.1f + (skill_level * 0.02f + 1.0f))));
				skill.SetPlus(((15 * skill_level)));
				player.SetPerform(1);
			}
		}
		public GSkill450Stub()
			: base(450)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = false;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(1,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(2,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(3,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(5,"ÌìÒôËÂ_·¨±¦_ÂÖ»ØÖé");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(19,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(20,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(21,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(23,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÂÖ»ØÖé");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "·¨º£ÂÖ»Ø";
			nativename = "·¨º£ÂÖ»Ø";
			icon = "·¨º£ÂÖ»Ø.dds";
			SetTalent(0,670);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 1;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (63 - 3 * skill_level);
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetValue(((8 * skill_level * (skill_t0 + 1))));
			victim.SetJuqi(true);
			return true;
		}
	}
	public class GSkill450 : GSkill
	{
		public GSkill450()
			: base(450)
		{
			
		}
	}
	public class GSkill451Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();

				skill.SetRatio((D2INT(player_level / (12 - skill_level)) * 0.01f + (skill_t0 * 0.1f + (skill_level * 0.02f + 1.0f))));
				skill.SetPlus(((15 * skill_level)));
				player.SetPerform(1);
			}
		}
		public GSkill451Stub()
			: base(451)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(1,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(2,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(4,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(5,"ºÏ»¶ÅÉ_·¨±¦_ÉãĞÄÁå");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(19,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(20,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(22,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(23,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÉåĞÄÁå");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "Éã»ê¶áÆÇ";
			nativename = "Éã»ê¶áÆÇ";
			icon = "Éã»ê¶áÆÇ.dds";
			SetTalent(0,721);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 1;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (32 - 2 * skill_level);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetProbability(((1.0f - player_level * 0.002f) * ((3 * skill_t0 + 30))));
			victim.SetRatio((skill_t0 * 0.09f + 0.12f));
			victim.SetXiaoxin(true);
			return true;
		}
	}
	public class GSkill451 : GSkill
	{
		public GSkill451()
			: base(451)
		{
			
		}
	}
	public class GSkill452Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();
				int				skill_t2 = skill.GetT2();

				skill.SetCrit((skill_t1 * 0.02f));
				skill.SetRatio(((skill_t0 + 1) * (D2INT((player_mp / 0.95f) / player_maxmp) * 0.08f) + (D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_level * 0.04f + (skill_t0 * 0.08f + 1.0f)))));
				skill.SetPlus((player_def * (skill_t2 * 0.03f) + ((90 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill452Stub()
			: base(452)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(2,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(3,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(4,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(5,"ÇàÔÆÃÅ_·¨±¦_ÆßĞÇ½£");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(20,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(21,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(22,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(23,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßĞÇ½£");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "Á÷ĞÇ¸ÏÔÂ";
			nativename = "Á÷ĞÇ¸ÏÔÂ";
			icon = "Á÷ĞÇ¸ÏÔÂ.dds";
			SetTalent(0,568);
			SetTalent(1,599);
			SetTalent(2,1582);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 3;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-15 * skill_level) - skill_level * skill_level + 195);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetProbability(((5 * skill_level + 25)));
			victim.SetTime(((1000 * skill_t0 + 3100)));
			victim.SetRatio((skill_level * 0.05f + 0.25f));
			victim.SetBuffid(1);
			victim.SetSlow(true);
			victim.SetProbability(-1.0f);
			victim.SetTime(4000.0f);
			victim.SetBuffid(1);
			victim.SetAmount(((100 * (skill_t0 + skill_level))));
			victim.SetValue(0.0f);
			victim.SetMpleak(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_mp = player.GetMp();
			int				player_maxmp = player.GetMaxmp();

			victim.SetBuffid((D2INT((player_mp / 0.95f) / player_maxmp)));
			victim.SetUniqprompt(true);
			return true;
		}
	}
	public class GSkill452 : GSkill
	{
		public GSkill452()
			: base(452)
		{
			
		}
	}
	public class GSkill453Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_t0 * 0.1f + (skill_level * 0.02f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((10 * skill_level))));
				player.SetPerform(1);
			}
		}
		public class GState3 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_t0 * 0.1f + (skill_level * 0.02f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((10 * skill_level))));
				player.SetPerform(0);
			}
		}
		public GSkill453Stub()
			: base(453)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(1,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(3,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(4,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(5,"¹íÍõ×Ú_·¨±¦_ËÄÁéá¦");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(19,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(21,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(22,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(23,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ËÄÁéá¦");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "ËÄÁéÑªÖä";
			nativename = "ËÄÁéÑªÖä";
			icon = "ËÄÁéÑªÖä.dds";
			SetTalent(0,652);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
			AddState(new GState3());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-15 * skill_level) - skill_level * skill_level + 185);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetProbability((player_level * (skill_level * 0.35f)));
			victim.SetTime(2100.0f);
			victim.SetRatio((skill_t0 * 0.05f + 0.1f));
			victim.SetBuffid(1);
			victim.SetWeak(true);
			victim.SetProbability(-1.0f);
			victim.SetTime(2000.0f);
			victim.SetBuffid(1);
			victim.SetAmount((player_level * (skill_t0 * 0.1f + (skill_level * 0.2f + 0.4f))));
			victim.SetValue(0.0f);
			victim.SetHpleak(true);
			victim.SetProbability(((3 * skill_t0 + 20)));
			victim.SetTime(8100.0f);
			victim.SetRatio(((skill_t0 * 0.5f + 1.0f) * 0.07000000000000001f));
			victim.SetBuffid(3);
			victim.SetTiansha(true);
			return true;
		}
	}
	public class GSkill453 : GSkill
	{
		public GSkill453()
			: base(453)
		{
			
		}
	}
	public class GSkill454Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_level * 0.03f + (skill_t0 * 0.1f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((60 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill454Stub()
			: base(454)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(1,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(2,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(3,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(5,"ÌìÒôËÂ_·¨±¦_½ğ¸ÕèÆ");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(19,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(20,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(21,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(23,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ğ¸ÕèÆ");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "½ğ¸Õ½µÄ§";
			nativename = "½ğ¸Õ½µÄ§";
			icon = "½ğ¸Õ½µÄ§.dds";
			SetTalent(0,670);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-15 * skill_level) - skill_level * skill_level + 195);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_mp = player.GetMp();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetProbability(((25 * skill_level + 75)));
			victim.SetTime(((1000 * skill_t0 + 2100)));
			victim.SetValue(0.0f);
			victim.SetSleep(true);
			victim.SetProbability(-1.0f);
			victim.SetTime(2000.0f);
			victim.SetBuffid(1);
			victim.SetAmount((player_mp * (skill_t0 * 0.05f + (skill_level * 0.02f + 0.02f))));
			victim.SetValue(0.0f);
			victim.SetMpleak(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetValue(((16 * skill_level * (skill_t0 + 1))));
			victim.SetJuqi(true);
			return true;
		}
	}
	public class GSkill454 : GSkill
	{
		public GSkill454()
			: base(454)
		{
			
		}
	}
	public class GSkill455Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_level * 0.02f + (skill_t0 * 0.1f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((35 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill455Stub()
			: base(455)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(1,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(2,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(4,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(5,"ºÏ»¶ÅÉ_·¨±¦_¶àÇé»·");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(19,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(20,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(22,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(23,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¶àÇé»·");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "É²ÄÇ·¼»ª";
			nativename = "É²ÄÇ·¼»ª";
			icon = "É²ÄÇ·¼»ª.dds";
			SetTalent(0,721);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-15 * skill_level) - skill_level * skill_level + 185);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				player_mp = player.GetMp();
			int				player_maxmp = player.GetMaxmp();
			int				skill_level = skill.GetLevel();
			int				skill_t0 = skill.GetT0();

			victim.SetProbability(((1.0f - player_level * 0.002f) * ((3 * skill_t0 + 40))));
			victim.SetRatio((skill_t0 * 0.09f + 0.24f));
			victim.SetXiaoxin(true);
			victim.SetRatio((norm((player_maxmp * (skill_level * 0.04f + 0.11f)) / (player_mp + 1)) * (skill_level * 0.05f + 0.15f) + 0.0001f));
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetSecondattack(true);
			return true;
		}
	}
	public class GSkill455 : GSkill
	{
		public GSkill455()
			: base(455)
		{
			
		}
	}
	public class GSkill456Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_mp = player.GetMp();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_level * 0.04f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((player_mp + player_hp) * (skill_level * 0.01f) + ((60 * skill_level)))));
				player.SetPerform(1);
			}
		}
		public GSkill456Stub()
			: base(456)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_½­É½Èç»­");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_½­É½Èç»­");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_½­É½Èç»­");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_½­É½Èç»­");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_½­É½Èç»­");
			SetAction(5,"¹íµÀ_·¨±¦_½­É½Èç»­");
			SetAction(6,"·ÙÏã¹È_·¨±¦_½­É½Èç»­");
			SetAction(7,"ÊŞÉñ_·¨±¦_½­É½Èç»­");
			SetAction(8,"ºüÑı_·¨±¦_½­É½Èç»­");
			SetAction(9,"ĞùÔ¯_·¨±¦_½­É½Èç»­");
			SetAction(10,"»³¹â_·¨±¦_½­É½Èç»­");
			SetAction(11,"Ì«ê»_·¨±¦_½­É½Èç»­");
			SetAction(12,"Ìì»ª_·¨±¦_½­É½Èç»­");
			SetAction(13,"ÁéÙí_·¨±¦_½­É½Èç»­");
			SetAction(14,"Ó¢ÕĞ_·¨±¦_½­É½Èç»­");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_½­É½Èç»­");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_½­É½Èç»­");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_½­É½Èç»­");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(25,"ÊŞÉñ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(26,"ºüÑı_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(27,"ĞùÔ¯_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_½­É½Èç»­");
			name = "½­É½Èç»­";
			nativename = "½­É½Èç»­";
			icon = "½­É½Èç»­.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (90 - 10 * skill_level);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(((3 * skill_level + 3)));
			victim.SetTime(3100.0f);
			victim.SetDiet(true);
			return true;
		}
	}
	public class GSkill456 : GSkill
	{
		public GSkill456()
			: base(456)
		{
			
		}
	}
	public class GSkill457Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_level * 0.04f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((60 * (zrand(249 * skill_level + 50) + skill_level) * skill_level) * 0.01f)));
				player.SetPerform(1);
			}
		}
		public GSkill457Stub()
			: base(457)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_·ñ¼«Ì©À´");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(5,"¹íµÀ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(6,"·ÙÏã¹È_·¨±¦_·ñ¼«Ì©À´");
			SetAction(7,"ÊŞÉñ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(8,"ºüÑı_·¨±¦_·ñ¼«Ì©À´");
			SetAction(9,"ĞùÔ¯_·¨±¦_·ñ¼«Ì©À´");
			SetAction(10,"»³¹â_·¨±¦_·ñ¼«Ì©À´");
			SetAction(11,"Ì«ê»_·¨±¦_·ñ¼«Ì©À´");
			SetAction(12,"Ìì»ª_·¨±¦_·ñ¼«Ì©À´");
			SetAction(13,"ÁéÙí_·¨±¦_·ñ¼«Ì©À´");
			SetAction(14,"Ó¢ÕĞ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_·ñ¼«Ì©À´");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_·ñ¼«Ì©À´");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(25,"ÊŞÉñ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(26,"ºüÑı_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(27,"ĞùÔ¯_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			name = "·ñ¼«Ì©À´";
			nativename = "·ñ¼«Ì©À´";
			icon = "·ñ¼«Ì©À´.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (90 - 10 * skill_level);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(((2 * skill_level + 3)));
			victim.SetTime(4100.0f);
			victim.SetRatio((skill_level * 0.03f + 0.09f));
			victim.SetValue((skill_level * 0.03f + 0.09f));
			victim.SetRandcurse(true);
			return true;
		}
	}
	public class GSkill457 : GSkill
	{
		public GSkill457()
			: base(457)
		{
			
		}
	}
	public class GSkill458Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetCrit((D2INT(zrand(101) / 75) * (skill_level * 0.02f + 0.05f) + 0.0001f));
				skill.SetCrithurt((skill_level * 0.15f));
				skill.SetRatio((D2INT(player_level / (10 - skill_level)) * 0.01f + (skill_level * 0.04f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((88 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill458Stub()
			: base(458)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(5,"¹íµÀ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(6,"·ÙÏã¹È_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(7,"ÊŞÉñ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(8,"ºüÑı_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(9,"ĞùÔ¯_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(10,"»³¹â_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(11,"Ì«ê»_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(12,"Ìì»ª_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(13,"ÁéÙí_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(14,"Ó¢ÕĞ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(25,"ÊŞÉñ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(26,"ºüÑı_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(27,"ĞùÔ¯_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			name = "Íò¶¾ÊÉÌì";
			nativename = "Íò¶¾ÊÉÌì";
			icon = "Íò¶¾ÊÉÌì.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (125 - 15 * skill_level);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(((1.0f - player_level * 0.002f) * 100.0f));
			victim.SetTime(4000.0f);
			victim.SetBuffid(1);
			victim.SetAmount((player_level * (skill_level * 2.5f)));
			victim.SetValue(0.0f);
			victim.SetHpleak(true);
			return true;
		}
	}
	public class GSkill458 : GSkill
	{
		public GSkill458()
			: base(458)
		{
			
		}
	}
	public class GSkill459Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT((player_hp / 0.75f) / player_maxhp) * (skill_level * 0.05f) + (D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_t0 * 0.03f + (skill_level * 0.04f + 1.0f)))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((60 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill459Stub()
			: base(459)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = false;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_×íÉúÃÎËÀ");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(5,"¹íµÀ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(6,"·ÙÏã¹È_·¨±¦_×íÉúÃÎËÀ");
			SetAction(7,"ÊŞÉñ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(8,"ºüÑı_·¨±¦_×íÉúÃÎËÀ");
			SetAction(9,"ĞùÔ¯_·¨±¦_×íÉúÃÎËÀ");
			SetAction(10,"»³¹â_·¨±¦_×íÉúÃÎËÀ");
			SetAction(11,"Ì«ê»_·¨±¦_×íÉúÃÎËÀ");
			SetAction(12,"Ìì»ª_·¨±¦_×íÉúÃÎËÀ");
			SetAction(13,"ÁéÙí_·¨±¦_×íÉúÃÎËÀ");
			SetAction(14,"Ó¢ÕĞ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_×íÉúÃÎËÀ");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_×íÉúÃÎËÀ");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(24,"·ÙÏã¹È_·¨±¦_×íÉúÃÎËÀ");
			SetAction(25,"ÊŞÉñ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(26,"ºüÑı_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(27,"ĞùÔ¯_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			name = "Óñ¾»Ìì»ª";
			nativename = "Óñ¾»Ìì»ª";
			icon = "×íÉúÃÎËÀ.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (90 - 10 * skill_level);
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(100.0f);
			victim.SetRatio(0.0f);
			victim.SetValue(((zrand(10 * skill_level + 91) + skill_level)));
			victim.SetHeal(true);
			return true;
		}
	}
	public class GSkill459 : GSkill
	{
		public GSkill459()
			: base(459)
		{
			
		}
	}
}
