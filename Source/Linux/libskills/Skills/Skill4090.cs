using System;
using System.Text;

namespace SKILL
{
	public class GSkill4090Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * (zrand(249 * skill_level + 50) + skill_level) * skill_level) * 0.01f)));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4090Stub()
			: base(4090)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_·ñ¼«Ì©À´");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(5,"¹íµÀ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(6,"·ÙÏã¹È_·¨±¦_·ñ¼«Ì©À´");
			SetAction(7,"ÊÞÉñ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(8,"ºüÑý_·¨±¦_·ñ¼«Ì©À´");
			SetAction(9,"ÐùÔ¯_·¨±¦_·ñ¼«Ì©À´");
			SetAction(10,"»³¹â_·¨±¦_·ñ¼«Ì©À´");
			SetAction(11,"Ì«ê»_·¨±¦_·ñ¼«Ì©À´");
			SetAction(12,"Ìì»ª_·¨±¦_·ñ¼«Ì©À´");
			SetAction(13,"ÁéÙí_·¨±¦_·ñ¼«Ì©À´");
			SetAction(14,"Ó¢ÕÐ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(15,"0");
			SetAction(16,"0");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_·ñ¼«Ì©À´");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_·ñ¼«Ì©À´");
			name = "Õæ¡¤·ñ¼«Ì©À´";
			nativename = "Õæ¡¤·ñ¼«Ì©À´";
			icon = "·ÉÉý·ñ¼«Ì©À´.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4090 : GSkill
	{
		public GSkill4090()
			: base(4090)
		{
			
		}
	}
	public class GSkill4091Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.06f + (skill_t0 * 0.1f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill4091Stub()
			: base(4091)
		{
			occupation = 130;
			maxlevel = 3;
			maxlearn = 3;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_ÆßÐÇÓ¡");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(5,"¹íµÀ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(6,"·ÙÏã¹È_·¨±¦_ÆßÐÇÓ¡");
			SetAction(7,"ÊÞÉñ_·¨±¦_ÆßÐÇÓ¡");
			SetAction(8,"ºüÑý_·¨±¦_ÆßÐÇÓ¡");
			SetAction(9,"0");
			SetAction(10,"»³¹â_·¨±¦_ÆßÐÇÓ¡");
			SetAction(11,"Ì«ê»_·¨±¦_ÆßÐÇÓ¡");
			SetAction(12,"Ìì»ª_·¨±¦_ÆßÐÇÓ¡");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(27,"0");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_ÆßÐÇÓ¡");
			name = "ÔªÏüµÆ×£";
			nativename = "ÔªÏüµÆ×£";
			icon = "»ªÕÃÐÇÔÉ.dds";
			SetTalent(0,721);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override float GetRadius(GSkill skill)
		{
			return 4.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			return -125.000000f;
		}
		public override int GetCoverage(GSkill skill)
		{
			return 2;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(50.0f);
			victim.SetTime(12100.0f);
			victim.SetBuffid(0);
			victim.SetValue(200.0f);
			victim.SetSubdefence(true);
			victim.SetProbability(((skill_level * skill_level + 15)));
			victim.SetTime(10100.0f);
			victim.SetRatio((skill_level * (skill_level * 0.01f) + (skill_level * 0.01f)));
			victim.SetBuffid(5);
			victim.SetDecaccuracy(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();

			victim.SetProbability(25.0f);
			victim.SetRatio(0.0f);
			victim.SetValue(((3 * player_level + 300)));
			victim.SetHeal(true);
			return true;
		}
	}
	public class GSkill4091 : GSkill
	{
		public GSkill4091()
			: base(4091)
		{
			
		}
	}
	public class GSkill4092Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((player_mp + player_hp) * (skill_level * 0.01f) + ((215 * skill_level)))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4092Stub()
			: base(4092)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_½­É½Èç»­");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_½­É½Èç»­");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_½­É½Èç»­");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_½­É½Èç»­");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_½­É½Èç»­");
			SetAction(5,"¹íµÀ_·¨±¦_½­É½Èç»­");
			SetAction(6,"·ÙÏã¹È_·¨±¦_½­É½Èç»­");
			SetAction(7,"ÊÞÉñ_·¨±¦_½­É½Èç»­");
			SetAction(8,"ºüÑý_·¨±¦_½­É½Èç»­");
			SetAction(9,"ÐùÔ¯_·¨±¦_½­É½Èç»­");
			SetAction(10,"»³¹â_·¨±¦_½­É½Èç»­");
			SetAction(11,"Ì«ê»_·¨±¦_½­É½Èç»­");
			SetAction(12,"Ìì»ª_·¨±¦_½­É½Èç»­");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_½­É½Èç»­");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_½­É½Èç»­");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_½­É½Èç»­");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_½­É½Èç»­");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_½­É½Èç»­");
			name = "Õæ¡¤½­É½Èç»­";
			nativename = "Õæ¡¤½­É½Èç»­";
			icon = "·ÉÉý½­É½Èç»­.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4092 : GSkill
	{
		public GSkill4092()
			: base(4092)
		{
			
		}
	}
	public class GSkill4093Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetCrit((D2INT(zrand(101) / 75) * (skill_level * 0.02f + 0.05f) + 0.0001f));
				skill.SetCrithurt((skill_level * 0.15f));
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4093Stub()
			: base(4093)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(5,"¹íµÀ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(6,"·ÙÏã¹È_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(7,"ÊÞÉñ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(8,"ºüÑý_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(9,"ÐùÔ¯_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(10,"»³¹â_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(11,"Ì«ê»_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(12,"Ìì»ª_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_Íò¶¾ÊÉÌì");
			name = "Õæ¡¤Íò¶¾ÊÉÌì";
			nativename = "Õæ¡¤Íò¶¾ÊÉÌì";
			icon = "·ÉÉýÍò¶¾ÊÉÌì.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4093 : GSkill
	{
		public GSkill4093()
			: base(4093)
		{
			
		}
	}
	public class GSkill4094Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT((player_hp / 0.75f) / player_maxhp) * (skill_level * 0.05f) + (D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_t0 * 0.03f + (skill_level * 0.07000000000000001f + 1.0f)))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4094Stub()
			: base(4094)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_×íÉúÃÎËÀ");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(5,"¹íµÀ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(6,"·ÙÏã¹È_·¨±¦_×íÉúÃÎËÀ");
			SetAction(7,"ÊÞÉñ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(8,"ºüÑý_·¨±¦_×íÉúÃÎËÀ");
			SetAction(9,"ÐùÔ¯_·¨±¦_×íÉúÃÎËÀ");
			SetAction(10,"»³¹â_·¨±¦_×íÉúÃÎËÀ");
			SetAction(11,"Ì«ê»_·¨±¦_×íÉúÃÎËÀ");
			SetAction(12,"Ìì»ª_·¨±¦_×íÉúÃÎËÀ");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_×íÉúÃÎËÀ");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_×íÉúÃÎËÀ");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_×íÉúÃÎËÀ");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(24,"·ÙÏã¹È_·¨±¦_×íÉúÃÎËÀ");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_×íÉúÃÎËÀ");
			name = "Õæ¡¤Óñ¾»Ìì»ª";
			nativename = "Õæ¡¤Óñ¾»Ìì»ª";
			icon = "·ÉÉý×íÉúÃÎËÀ.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4094 : GSkill
	{
		public GSkill4094()
			: base(4094)
		{
			
		}
	}
	public class GSkill4095Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_def = player.GetDef();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				skill.SetRatio((D2INT(player_level / (11 - skill_level)) * 0.01f + (skill_t0 * 0.03f + (skill_level * 0.04f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((75 * skill_level))));
				player.SetPerform(1);
			}
		}
		public GSkill4095Stub()
			: base(4095)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_ÁáççËþ");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_ÁáççËþ");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_ÁáççËþ");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_ÁáççËþ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_ÁáççËþ");
			SetAction(5,"¹íµÀ_·¨±¦_ÁáççËþ");
			SetAction(6,"·ÙÏã¹È_·¨±¦_ÁáççËþ");
			SetAction(7,"ÊÞÉñ_·¨±¦_ÁáççËþ");
			SetAction(8,"ºüÑý_·¨±¦_ÁáççËþ");
			SetAction(9,"");
			SetAction(10,"»³¹â_·¨±¦_ÁáççËþ");
			SetAction(11,"Ì«ê»_·¨±¦_ÁáççËþ");
			SetAction(12,"Ìì»ª_·¨±¦_ÁáççËþ");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"ÔªËØ´óÊ¦_·¨±¦_ÁáççËþ");
			SetAction(16,"ÔªËØ´óÊ¦_·¨±¦_ÁáççËþ");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_ÁáççËþ");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(27,"");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_ÁáççËþ");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_ÁáççËþ");
			name = "±¦ËþÕòºÓÑý";
			nativename = "±¦ËþÕòºÓÑý";
			icon = "±¦ËþÕòºÓÑý.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetRadius(GSkill skill)
		{
			return 5.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return (90 - 10 * skill_level);
		}
		public override int GetCoverage(GSkill skill)
		{
			return 2;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_level = player.GetLevel();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(((1.0f - player_level * 0.002f) * ((5 * skill_level + 15))));
			victim.SetTime(30000.0f);
			victim.SetBuffid(1);
			victim.SetAmount(((360 * skill_level + 180)));
			victim.SetValue(((40 * (skill_level * skill_level + skill_level))));
			victim.SetHpleak(true);
			victim.SetProbability(-1.0f);
			victim.SetTime(30000.0f);
			victim.SetBuffid(1);
			victim.SetAmount(((360 * skill_level + 180)));
			victim.SetValue(((40 * (skill_level * skill_level + skill_level))));
			victim.SetMpleak(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_hp = player.GetHp();
			int				player_maxhp = player.GetMaxhp();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(25.0f);
			victim.SetTime(12100.0f);
			victim.SetBuffid(1);
			victim.SetValue((D2INT(((player_hp * (2 * skill_level * skill_level + 8)) / player_maxhp))));
			victim.SetAddattack(true);
			return true;
		}
	}
	public class GSkill4095 : GSkill
	{
		public GSkill4095()
			: base(4095)
		{
			
		}
	}
	public class GSkill4096Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4096Stub()
			: base(4096)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(5,"¹íµÀ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(6,"·ÙÏã¹È_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(7,"ÊÞÉñ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(8,"ºüÑý_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(9,"ÐùÔ¯_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(10,"»³¹â_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(11,"Ì«ê»_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(12,"Ìì»ª_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(13,"ÁéÙí_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(14,"Ó¢ÕÐ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_ÈÕÔÂ±¦¼ø");
			name = "Õæ¡¤´ó·²Èô¼ò";
			nativename = "Õæ¡¤´ó·²Èô¼ò";
			icon = "·ÉÉýÍ¨ÓÃ04.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4096 : GSkill
	{
		public GSkill4096()
			: base(4096)
		{
			
		}
	}
	public class GSkill4097Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4097Stub()
			: base(4097)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(5,"¹íµÀ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(6,"·ÙÏã¹È_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(7,"ÊÞÉñ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(8,"ºüÑý_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(9,"ÐùÔ¯_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(10,"»³¹â_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(11,"Ì«ê»_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(12,"Ìì»ª_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(13,"ÁéÙí_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(14,"Ó¢ÕÐ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(17,"ºÏ»¶ÅÉ_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_¾ÅÁúÉñ»ðÕÖ");
			name = "Õæ¡¤Á¶ÓüÉñ»ð";
			nativename = "Õæ¡¤Á¶ÓüÉñ»ð";
			icon = "·ÉÉýÁ¶ÓüÉñ»ð.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4097 : GSkill
	{
		public GSkill4097()
			: base(4097)
		{
			
		}
	}
	public class GSkill4098Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetCrit((skill_level * 0.02f + 0.01f));
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (skill_t0 * 0.03f + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4098Stub()
			: base(4098)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_½ðºùÂ«");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_½ðºùÂ«");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_½ðºùÂ«");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_½ðºùÂ«");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_½ðºùÂ«");
			SetAction(5,"¹íµÀ_·¨±¦_½ðºùÂ«");
			SetAction(6,"·ÙÏã¹È_·¨±¦_½ðºùÂ«");
			SetAction(7,"ÊÞÉñ_·¨±¦_½ðºùÂ«");
			SetAction(8,"ºüÑý_·¨±¦_½ðºùÂ«");
			SetAction(9,"ÐùÔ¯_·¨±¦_½ðºùÂ«");
			SetAction(10,"»³¹â_·¨±¦_½ðºùÂ«");
			SetAction(11,"Ì«ê»_·¨±¦_½ðºùÂ«");
			SetAction(12,"Ìì»ª_·¨±¦_½ðºùÂ«");
			SetAction(13,"ÁéÙí_·¨±¦_½ðºùÂ«");
			SetAction(14,"Ó¢ÕÐ_·¨±¦_½ðºùÂ«");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_½ðºùÂ«");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_½ðºùÂ«");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_½ðºùÂ«");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_½ðºùÂ«");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_½ðºùÂ«");
			name = "Õæ¡¤·½´çÇ¬À¤";
			nativename = "Õæ¡¤·½´çÇ¬À¤";
			icon = "·ÉÉý·½´çÇ¬À¤.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4098 : GSkill
	{
		public GSkill4098()
			: base(4098)
		{
			
		}
	}
	public class GSkill4099Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1600;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 400;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_level = player.GetLevel();
				int				player_hp = player.GetHp();
				int				player_maxhp = player.GetMaxhp();
				int				player_mp = player.GetMp();
				int				player_maxmp = player.GetMaxmp();
				int				player_maxatk = player.GetMaxatk();
				int				player_def = player.GetDef();
				int				player_res1 = player.GetRes1();
				int				player_res2 = player.GetRes2();
				int				player_res3 = player.GetRes3();
				int				player_res4 = player.GetRes4();
				int				player_res5 = player.GetRes5();
				int				player_occupation = player.GetOccupation();
				int				skill_level = skill.GetLevel();
				int				skill_t0 = skill.GetT0();
				int				skill_t1 = skill.GetT1();

				/*
				player.SetVar11(player_occupation);
				player.SetVar1(player_maxatk);
				player.SetVar2(player_maxhp);
				player.SetVar3(player_maxmp);
				player.SetVar4(player_hp);
				player.SetVar5(player_mp);
				player.SetVar6(player_res1);
				player.SetVar7(player_res2);
				player.SetVar8(player_res3);
				player.SetVar9(player_res4);
				player.SetVar10(player_res5);
				if ( zrand(100) >= (skill_level + 1) * (skill_level + 1) )
				    v = 2;
				  else
				    v = 1;
				player.SetVar16(v);
				skill.SetRatio((D2INT(player_level / (9 - skill_level)) * 0.01f + (skill_level * 0.07000000000000001f + (D2INT((zrand(skill_level + 101)) / 100.0f) * (skill_level * 0.6f) + (skill_t0 * 0.03f) + 1.0f))));
				skill.SetPlus((player_def * (skill_t1 * 0.03f) + ((215 * skill_level))));
				player.SetPerform(1);
				*/
			}
		}
		public GSkill4099Stub()
			: base(4099)
		{
			occupation = 130;
			maxlevel = 5;
			maxlearn = 5;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = true;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íµÀ_·¨±¦_ÒõÑô¾µ");
			SetAction(1,"ÇàÔÆÃÅ_·¨±¦_ÒõÑô¾µ");
			SetAction(2,"¹íÍõ×Ú_·¨±¦_ÒõÑô¾µ");
			SetAction(3,"ºÏ»¶ÅÉ_·¨±¦_ÒõÑô¾µ");
			SetAction(4,"ÌìÒôËÂ_·¨±¦_ÒõÑô¾µ");
			SetAction(5,"¹íµÀ_·¨±¦_ÒõÑô¾µ");
			SetAction(6,"·ÙÏã¹È_·¨±¦_ÒõÑô¾µ");
			SetAction(7,"ÊÞÉñ_·¨±¦_ÒõÑô¾µ");
			SetAction(8,"ºüÑý_·¨±¦_ÒõÑô¾µ");
			SetAction(9,"ÐùÔ¯_·¨±¦_ÒõÑô¾µ");
			SetAction(10,"»³¹â_·¨±¦_ÒõÑô¾µ");
			SetAction(11,"Ì«ê»_·¨±¦_ÒõÑô¾µ");
			SetAction(12,"Ìì»ª_·¨±¦_ÒõÑô¾µ");
			SetAction(13,"ÁéÙí_·¨±¦_ÒõÑô¾µ");
			SetAction(14,"Ó¢ÕÐ_·¨±¦_ÒõÑô¾µ");
			SetAction(15,"ÎäÆ÷´óÊ¦_·¨±¦_ÒõÑô¾µ");
			SetAction(16,"ÎäÆ÷´óÊ¦_·¨±¦_ÒõÑô¾µ");
			SetAction(17,"ÌìÒôËÂ_·¨±¦_ÒõÑô¾µ");
			SetAction(18,"¹íµÀ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(21,"ºÏ»¶ÅÉ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(22,"ÌìÒôËÂ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(23,"¹íµÀ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(24,"·ÙÏã¹È_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(25,"ÊÞÉñ_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(26,"ºüÑý_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(27,"ÐùÔ¯_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(28,"»³¹â_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(29,"Ì«ê»_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			SetAction(30,"Ìì»ª_Æï³Ë_·¨±¦_ÒõÑô¾µ");
			name = "Õæ¡¤ÒõÑôÏàÉú";
			nativename = "Õæ¡¤ÒõÑôÏàÉú";
			icon = "·ÉÉýÒõÑôÏàÉú.dds";
			SetTalent(0,687);
			SetTalent(1,1582);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 2;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return 6300 - 300 * skill_level;
		}
		public override int GetEnmity(GSkill skill)
		{
			return 1;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 5.0f);
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f);
		}
		public override float GetEffectdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return (D2INT((player_range / 13.0f)) * 2.8f + (D2INT(player_range / 8.9f) * 1.8f + ((player_range * 0.5f) - D2INT(player_range / 3.9f) * 0.3f)) + 0.05f + 10.0f);
		}
		public override float GetMpcost(GSkill skill)
		{
			int				skill_level = skill.GetLevel();

			return ((-35 * skill_level) - skill_level * skill_level + 445);
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffects(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTalismaneffectsbless(true);
			return true;
		}
	}
	public class GSkill4099 : GSkill
	{
		public GSkill4099()
			: base(4099)
		{
			
		}
	}
}
