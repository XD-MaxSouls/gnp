using System;
using System.Text;

namespace SKILL
{
	public class GSkill5240Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 0;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill5240Stub()
			: base(5240)
		{
			occupation = 109;
			maxlevel = 1;
			maxlearn = 0;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 1;
			targettype = 0;
			rangetype = 5;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"0");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"0");
			SetAction(7,"0");
			SetAction(8,"0");
			SetAction(9,"0");
			SetAction(10,"0");
			SetAction(11,"0");
			SetAction(12,"0");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"0");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"0");
			SetAction(25,"0");
			SetAction(26,"0");
			SetAction(27,"0");
			SetAction(28,"0");
			SetAction(29,"0");
			SetAction(30,"0");
			name = "ÑÓÊ±Çå¿ÕÐÐÀäÈ´";
			nativename = "ÑÓÊ±Çå¿ÕÐÐÀäÈ´";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 13;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetRatio(4853.0f);
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetClearcooldown(true);
			return true;
		}
	}
	public class GSkill5240 : GSkill
	{
		public GSkill5240()
			: base(5240)
		{
			
		}
	}
	public class GSkill5241Stub : GSkillStub
	{
		public GSkill5241Stub()
			: base(5241)
		{
			occupation = 1;
			maxlevel = 10;
			maxlearn = 10;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = false;
			dobless = false;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 0;
			succeedskillcolornum = 0;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"");
			SetAction(1,"");
			SetAction(2,"");
			SetAction(3,"");
			SetAction(4,"");
			SetAction(5,"");
			SetAction(6,"");
			SetAction(7,"");
			SetAction(8,"");
			SetAction(9,"");
			SetAction(10,"");
			SetAction(11,"");
			SetAction(12,"");
			SetAction(13,"");
			SetAction(14,"");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"");
			SetAction(19,"");
			SetAction(20,"");
			SetAction(21,"");
			SetAction(22,"");
			SetAction(23,"");
			SetAction(24,"");
			SetAction(25,"");
			SetAction(26,"");
			SetAction(27,"");
			SetAction(28,"");
			SetAction(29,"");
			SetAction(30,"");
			name = "5239";
			nativename = "5239";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;
		}
	}
	public class GSkill5241 : GSkill
	{
		public GSkill5241()
			: base(5241)
		{
			
		}
	}
	public class GSkill5242Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 500;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 500;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill5242Stub()
			: base(5242)
		{
			occupation = 129;
			maxlevel = 2;
			maxlearn = 2;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 3;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 0;
			credittype = 0;
			clearmask = 0;
			skill_limit = 8;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"¹íÍõ×Ú_ÕÕÑý");
			SetAction(1,"ÇàÔÆÃÅ_ÕÕÑý");
			SetAction(2,"¹íÍõ×Ú_ÕÕÑý");
			SetAction(3,"ºÏ»¶ÅÉ_ÕÕÑý");
			SetAction(4,"ÌìÒôËÂ_ÕÕÑý");
			SetAction(5,"¹íµÀ_ÕÕÑý");
			SetAction(6,"¹íÍõ×Ú_ÕÕÑý");
			SetAction(7,"ÊÞÉñ_ÕÕÑý");
			SetAction(8,"ºüÑý_ÕÕÑý");
			SetAction(9,"0");
			SetAction(10,"»³¹â_¼ÓËÙ");
			SetAction(11,"Ì«ê»_¼ÓËÙ");
			SetAction(12,"Ìì»ª_±¼À×");
			SetAction(13,"0");
			SetAction(14,"0");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(19,"ÇàÔÆÃÅ_Æï³Ë_ÕÕÑý");
			SetAction(20,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(21,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(22,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(23,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(24,"¹íÍõ×Ú_Æï³Ë_ÕÕÑý");
			SetAction(25,"ÊÞÉñ_Æï³Ë_ÕÕÑý");
			SetAction(26,"ºüÑý_Æï³Ë_ÕÕÑý");
			SetAction(27,"0");
			SetAction(28,"»³¹â_Æï³Ë_¼ÓËÙ");
			SetAction(29,"Ì«ê»_Æï³Ë_¼ÓËÙ");
			SetAction(30,"Ìì»ª_Æï³Ë_±¼À×");
			name = "µã»¯";
			nativename = "µã»¯";
			icon = "";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = -2;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 8.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 7.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 9.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();
			int				skill_level = skill.GetLevel();

			victim.SetProbability(100.0f);
			victim.SetTime(30000.0f);
			victim.SetValue(((skill_level + 893)));
			victim.SetBackorigin(true);
			return true;
		}
	}
	public class GSkill5242 : GSkill
	{
		public GSkill5242()
			: base(5242)
		{
			
		}
	}
	public class GSkill5243Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_rage = player.GetRage();
				int				player_maxatk = player.GetMaxatk();

				/*
				if ( player_rage <= player_maxatk )
				  {
				v = player_maxatk;
				  }
				  else
				  {
				v = player_rage;
				  }
				player.SetVar1(v);
				player.SetRage(0);
				player.SetPerform(1);
				*/
			}
		}
		public GSkill5243Stub()
			: base(5243)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 0;
			targettype = 0;
			rangetype = 16;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 128;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"Ò»·òµ±¹Ø");
			SetAction(1,"Ò»·òµ±¹Ø");
			SetAction(2,"Ò»·òµ±¹Ø");
			SetAction(3,"Ò»·òµ±¹Ø");
			SetAction(4,"Ò»·òµ±¹Ø");
			SetAction(5,"Ò»·òµ±¹Ø");
			SetAction(6,"Ò»·òµ±¹Ø");
			SetAction(7,"Ò»·òµ±¹Ø");
			SetAction(8,"Ò»·òµ±¹Ø");
			SetAction(9,"Ò»·òµ±¹Ø");
			SetAction(10,"Ò»·òµ±¹Ø");
			SetAction(11,"Ò»·òµ±¹Ø");
			SetAction(12,"Ò»·òµ±¹Ø");
			SetAction(13,"Ò»·òµ±¹Ø");
			SetAction(14,"Ò»·òµ±¹Ø");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"Ò»·òµ±¹Ø");
			SetAction(19,"Ò»·òµ±¹Ø");
			SetAction(20,"Ò»·òµ±¹Ø");
			SetAction(21,"Ò»·òµ±¹Ø");
			SetAction(22,"Ò»·òµ±¹Ø");
			SetAction(23,"Ò»·òµ±¹Ø");
			SetAction(24,"Ò»·òµ±¹Ø");
			SetAction(25,"Ò»·òµ±¹Ø");
			SetAction(26,"Ò»·òµ±¹Ø");
			SetAction(27,"Ò»·òµ±¹Ø");
			SetAction(28,"Ò»·òµ±¹Ø");
			SetAction(29,"Ò»·òµ±¹Ø");
			SetAction(30,"Ò»·òµ±¹Ø");
			name = "Ò»·òµ±¹Ø";
			nativename = "Ò»·òµ±¹Ø";
			icon = "Ò»·òµ±¹Ø.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 13;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 30000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_var1 = player.GetVar1();

			victim.SetTime(10000.0f);
			victim.SetRatio(1.0f);
			victim.SetAmount(player_var1);
			victim.SetDechurt(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_var1 = player.GetVar1();

			victim.SetTime(10000.0f);
			victim.SetRatio(1.0f);
			victim.SetAmount(player_var1);
			victim.SetDechurt(true);
			victim.SetProbability(120.0f);
			victim.SetTime(300000.0f);
			victim.SetRatio(0.2f);
			victim.SetDecdamage(true);
			victim.SetProbability(120.0f);
			victim.SetTime(30000.0f);
			victim.SetRatio(5244.0f);
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetSetcooldown(true);
			victim.SetProbability(120.0f);
			victim.SetRatio(4127.0f);
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetDispel(true);
			return true;
		}
	}
	public class GSkill5243 : GSkill
	{
		public GSkill5243()
			: base(5243)
		{
			
		}
	}
	public class GSkill5244Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_maxhp = player.GetMaxhp();
				int				player_rage = player.GetRage();

				player.SetVar1((int)(player_rage / player_maxhp));
				player.SetPerform(1);
			}
		}
		public GSkill5244Stub()
			: base(5244)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 0;
			targettype = 0;
			rangetype = 16;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 128;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"ÌúÒÂËÆÑ©");
			SetAction(1,"ÌúÒÂËÆÑ©");
			SetAction(2,"ÌúÒÂËÆÑ©");
			SetAction(3,"ÌúÒÂËÆÑ©");
			SetAction(4,"ÌúÒÂËÆÑ©");
			SetAction(5,"ÌúÒÂËÆÑ©");
			SetAction(6,"ÌúÒÂËÆÑ©");
			SetAction(7,"ÌúÒÂËÆÑ©");
			SetAction(8,"ÌúÒÂËÆÑ©");
			SetAction(9,"ÌúÒÂËÆÑ©");
			SetAction(10,"ÌúÒÂËÆÑ©");
			SetAction(11,"ÌúÒÂËÆÑ©");
			SetAction(12,"ÌúÒÂËÆÑ©");
			SetAction(13,"ÌúÒÂËÆÑ©");
			SetAction(14,"ÌúÒÂËÆÑ©");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÌúÒÂËÆÑ©");
			SetAction(19,"ÌúÒÂËÆÑ©");
			SetAction(20,"ÌúÒÂËÆÑ©");
			SetAction(21,"ÌúÒÂËÆÑ©");
			SetAction(22,"ÌúÒÂËÆÑ©");
			SetAction(23,"ÌúÒÂËÆÑ©");
			SetAction(24,"ÌúÒÂËÆÑ©");
			SetAction(25,"ÌúÒÂËÆÑ©");
			SetAction(26,"ÌúÒÂËÆÑ©");
			SetAction(27,"ÌúÒÂËÆÑ©");
			SetAction(28,"ÌúÒÂËÆÑ©");
			SetAction(29,"ÌúÒÂËÆÑ©");
			SetAction(30,"ÌúÒÂËÆÑ©");
			name = "ÌúÒÂËÆÑ©";
			nativename = "ÌúÒÂËÆÑ©";
			icon = "ÌúÒÂËÆÑ©.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 13;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 30000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_var1 = player.GetVar1();

			/*
			if ( 10000 * player_var1 <= 3000 )
			{
			t = 3000.0f;
			}
			else
			{
			t = (10000 * player_var1);
			}
			victim.SetTime(t);
			victim.SetBuffid(0);
			victim.SetAmount(1.0f);
			victim.SetTurndebuff(true);
			*/
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_var1 = player.GetVar1();

			/*
			if ( 10000 * player_var1 <= 3000 )
			{
			t = 3000.0f;
			}
			else
			{
			t = (10000 * player_var1);
			}
			victim.SetTime(t);
			victim.SetBuffid(0);
			victim.SetAmount(1.0f);
			victim.SetTurndebuff(true);
			victim.SetTime(300000.0f);
			victim.SetBuffid(0);
			victim.SetValue(100.0f);
			victim.SetAddanti(true);
			victim.SetProbability(120.0f);
			victim.SetTime(30000.0f);
			victim.SetRatio(5243.0f);
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetSetcooldown(true);
			victim.SetProbability(120.0f);
			victim.SetRatio(4102.0f);
			victim.SetAmount(0.0f);
			victim.SetValue(0.0f);
			victim.SetDispel(true);
			*/
			return true;
		}
	}
	public class GSkill5244 : GSkill
	{
		public GSkill5244()
			: base(5244)
		{
			
		}
	}
	public class GSkill5245Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill5245Stub()
			: base(5245)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 0;
			targettype = 0;
			rangetype = 16;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 128;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"½ð¸ê¹âº®");
			SetAction(1,"½ð¸ê¹âº®");
			SetAction(2,"½ð¸ê¹âº®");
			SetAction(3,"½ð¸ê¹âº®");
			SetAction(4,"½ð¸ê¹âº®");
			SetAction(5,"½ð¸ê¹âº®");
			SetAction(6,"½ð¸ê¹âº®");
			SetAction(7,"½ð¸ê¹âº®");
			SetAction(8,"½ð¸ê¹âº®");
			SetAction(9,"½ð¸ê¹âº®");
			SetAction(10,"½ð¸ê¹âº®");
			SetAction(11,"½ð¸ê¹âº®");
			SetAction(12,"½ð¸ê¹âº®");
			SetAction(13,"½ð¸ê¹âº®");
			SetAction(14,"½ð¸ê¹âº®");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"½ð¸ê¹âº®");
			SetAction(19,"½ð¸ê¹âº®");
			SetAction(20,"½ð¸ê¹âº®");
			SetAction(21,"½ð¸ê¹âº®");
			SetAction(22,"½ð¸ê¹âº®");
			SetAction(23,"½ð¸ê¹âº®");
			SetAction(24,"½ð¸ê¹âº®");
			SetAction(25,"½ð¸ê¹âº®");
			SetAction(26,"½ð¸ê¹âº®");
			SetAction(27,"½ð¸ê¹âº®");
			SetAction(28,"½ð¸ê¹âº®");
			SetAction(29,"½ð¸ê¹âº®");
			SetAction(30,"½ð¸ê¹âº®");
			name = "½ð¸ê¹âº®";
			nativename = "½ð¸ê¹âº®";
			icon = "½ð¸ê¹âº®.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 13;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 30000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetCastdistance(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			float			player_range = player.GetRange();

			return player_range;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(120.0f);
			victim.SetTime(6000.0f);
			victim.SetRatio(0.2f);
			victim.SetBuffid(0);
			victim.SetIncskillaccu(true);
			victim.SetProbability(120.0f);
			victim.SetTime(6000.0f);
			victim.SetBuffid(0);
			victim.SetValue(20.0f);
			victim.SetAddspot(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetProbability(120.0f);
			victim.SetTime(6000.0f);
			victim.SetRatio(0.2f);
			victim.SetBuffid(0);
			victim.SetIncskillaccu(true);
			victim.SetProbability(120.0f);
			victim.SetTime(6000.0f);
			victim.SetBuffid(0);
			victim.SetValue(20.0f);
			victim.SetAddspot(true);
			return true;
		}
	}
	public class GSkill5245 : GSkill
	{
		public GSkill5245()
			: base(5245)
		{
			
		}
	}
	public class GSkill5246Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();
				int				player_res1 = player.GetRes1();

				player.SetVar1((int)(player_res1 + 100));
				player.SetPerform(1);
			}
		}
		public GSkill5246Stub()
			: base(5246)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 3;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = true;
			autoattack = false;
			allowform = 128;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 10.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = -1;
			SetAction(0,"²×º£¶ÏÁ÷");
			SetAction(1,"²×º£¶ÏÁ÷");
			SetAction(2,"²×º£¶ÏÁ÷");
			SetAction(3,"²×º£¶ÏÁ÷");
			SetAction(4,"²×º£¶ÏÁ÷");
			SetAction(5,"²×º£¶ÏÁ÷");
			SetAction(6,"²×º£¶ÏÁ÷");
			SetAction(7,"²×º£¶ÏÁ÷");
			SetAction(8,"²×º£¶ÏÁ÷");
			SetAction(9,"²×º£¶ÏÁ÷");
			SetAction(10,"²×º£¶ÏÁ÷");
			SetAction(11,"²×º£¶ÏÁ÷");
			SetAction(12,"²×º£¶ÏÁ÷");
			SetAction(13,"²×º£¶ÏÁ÷");
			SetAction(14,"²×º£¶ÏÁ÷");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"²×º£¶ÏÁ÷");
			SetAction(19,"²×º£¶ÏÁ÷");
			SetAction(20,"²×º£¶ÏÁ÷");
			SetAction(21,"²×º£¶ÏÁ÷");
			SetAction(22,"²×º£¶ÏÁ÷");
			SetAction(23,"²×º£¶ÏÁ÷");
			SetAction(24,"²×º£¶ÏÁ÷");
			SetAction(25,"²×º£¶ÏÁ÷");
			SetAction(26,"²×º£¶ÏÁ÷");
			SetAction(27,"²×º£¶ÏÁ÷");
			SetAction(28,"²×º£¶ÏÁ÷");
			SetAction(29,"²×º£¶ÏÁ÷");
			SetAction(30,"²×º£¶ÏÁ÷");
			name = "²×º£¶ÏÁ÷";
			nativename = "²×º£¶ÏÁ÷";
			icon = "²×º£¶ÏÁ÷.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 13;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 1000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 30000;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 17.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override bool StateAttack(GSkill skill)
		{
			GPlayerWrapper	player = skill.GetPlayer();
			GPlayerWrapper	victim = skill.GetVictim();
			int				player_var1 = player.GetVar1();

			victim.SetProbability(player_var1);
			victim.SetTime(1000.0f);
			victim.SetDizzy(true);
			victim.SetProbability(-1.0f);
			victim.SetTime(6000.0f);
			victim.SetAmount(10.0f);
			victim.SetValue(1.0f);
			victim.SetBepulled(true);
			return true;
		}
		public override bool BlessMe(GSkill skill)
		{
			GPlayerWrapper	victim = skill.GetVictim();

			victim.SetTime(6000.0f);
			victim.SetPulling(true);
			return true;
		}
	}
	public class GSkill5246 : GSkill
	{
		public GSkill5246()
			: base(5246)
		{
			
		}
	}
	public class GSkill5247Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1000;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1000;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill5247Stub()
			: base(5247)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 2;
			timetype = 0;
			targettype = 0;
			rangetype = 5;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 1;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = 13;
			SetAction(0,"ÁéÙí_õæÓ°×··ç");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"0");
			SetAction(7,"0");
			SetAction(8,"0");
			SetAction(9,"0");
			SetAction(10,"0");
			SetAction(11,"0");
			SetAction(12,"0");
			SetAction(13,"ÁéÙí_õæÓ°×··ç");
			SetAction(14,"0");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÁéÙí_Æï³Ë_õæÓ°×··ç");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"0");
			SetAction(25,"0");
			SetAction(26,"0");
			SetAction(27,"0");
			SetAction(28,"0");
			SetAction(29,"0");
			SetAction(30,"0");
			name = "õæÓ°×··ç";
			nativename = "õæÓ°×··ç";
			icon = "õæÓ°×··ç.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 12;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 180000;
		}
		public override float GetMpcost(GSkill skill)
		{
			return 800.000000f;
		}
	}
	public class GSkill5247 : GSkill
	{
		public GSkill5247()
			: base(5247)
		{
			
		}
	}
	public class GSkill5248Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 1200;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 800;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
		}
		public GSkill5248Stub()
			: base(5248)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 3;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 1;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = 13;
			SetAction(0,"ÁéÙí_ÎÞË«ÖäÔ¸");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"0");
			SetAction(7,"0");
			SetAction(8,"0");
			SetAction(9,"0");
			SetAction(10,"0");
			SetAction(11,"0");
			SetAction(12,"0");
			SetAction(13,"ÁéÙí_ÎÞË«ÖäÔ¸");
			SetAction(14,"0");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"ÁéÙí_Æï³Ë_ÎÞË«ÖäÔ¸");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"0");
			SetAction(25,"0");
			SetAction(26,"0");
			SetAction(27,"0");
			SetAction(28,"0");
			SetAction(29,"0");
			SetAction(30,"0");
			name = "ÎÞË«ÖäÔ¸";
			nativename = "ÎÞË«ÖäÔ¸";
			icon = "ÎÞË«ÖäÔ¸.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 12;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 180000;
		}
		public override float GetAttackdistance(GSkill skill)
		{
			return 25.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 20.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 25.000000f;
		}
		public override float GetMpcost(GSkill skill)
		{
			return 1200.000000f;
		}
		public override int GetCoverage(GSkill skill)
		{
			return 40;
		}
	}
	public class GSkill5248 : GSkill
	{
		public GSkill5248()
			: base(5248)
		{
			
		}
	}
	public class GSkill5249Stub : GSkillStub
	{
		public class GState1 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 640;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPray(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState2 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 640;
			}
			public override void Calculate(GSkill skill)
			{
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState3 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 640;
			}
			public override void Calculate(GSkill skill)
			{
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState4 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 640;
			}
			public override void Calculate(GSkill skill)
			{
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public class GState5 : GState
		{
			public override int GetTime(GSkill skill)
			{
				return 640;
			}
			public override void Calculate(GSkill skill)
			{
				GPlayerWrapper	player = skill.GetPlayer();

				player.SetPerform(1);
			}
			public override bool Cancel(GSkill skill)
			{
				return true;
			}
		}
		public GSkill5249Stub()
			: base(5249)
		{
			occupation = 146;
			maxlevel = 1;
			maxlearn = 1;
			eventflag = 0;
			spcost = 1;
			reborncount = 0;
			type = 1;
			timetype = 0;
			targettype = 0;
			rangetype = 0;
			doenchant = true;
			dobless = false;
			autoattack = false;
			allowform = 64;
			credittype = 0;
			clearmask = 0;
			skill_limit = 0;
			skillelemsnum = 0;
			skillelemsfactor = 0.000000f;
			serialskill = 0;
			charge = 0;
			chargedist = 0.000000f;
			succeedskillcolor = 1;
			succeedskillcolornum = 1;
			comboskill = 0;
			need_item = false;
			item1_id = -1;
			item1_num = 0;
			item2_id = -1;
			item2_num = 0;
			item_relation = 0;
			weapon_limit = 13;
			SetAction(0,"¿þÀÜ¼¼_µãÆÆÇå¹â");
			SetAction(1,"0");
			SetAction(2,"0");
			SetAction(3,"0");
			SetAction(4,"0");
			SetAction(5,"0");
			SetAction(6,"0");
			SetAction(7,"0");
			SetAction(8,"0");
			SetAction(9,"0");
			SetAction(10,"0");
			SetAction(11,"0");
			SetAction(12,"0");
			SetAction(13,"¿þÀÜ¼¼_µãÆÆÇå¹â");
			SetAction(14,"0");
			SetAction(15,"");
			SetAction(16,"");
			SetAction(17,"");
			SetAction(18,"¿þÀÜ¼¼_Æï³Ë_µãÆÆÇå¹â");
			SetAction(19,"0");
			SetAction(20,"0");
			SetAction(21,"0");
			SetAction(22,"0");
			SetAction(23,"0");
			SetAction(24,"0");
			SetAction(25,"0");
			SetAction(26,"0");
			SetAction(27,"0");
			SetAction(28,"0");
			SetAction(29,"0");
			SetAction(30,"0");
			name = "Ä¾¼×¼¼¡¤µãÆÆÇå¹â";
			nativename = "Ä¾¼×¼¼¡¤µãÆÆÇå¹â";
			icon = "¿þÀÜ¼¼¡¤µãÆÆÇå¹â.dds";
			SetTalent(0,0);
			SetTalent(1,0);
			SetTalent(2,0);
			SetTalent(3,0);
			SetTalent(4,0);
			SetTalent(5,0);
			SetTalent(6,0);
			SetTalent(7,0);
			talent_size = 0;
			talent_type = 0;
			use_proficiency = false;
			inc_proficiency = 0;
			preskillnum = 0;
			cycle = false;
			cyclemode = 0;
			cyclegfx = "";
			skill_class = 12;
			guide = false;
			summon_id = 0;
			trigger = false;
			conbutton_sub = false;
			isBabySkill = false;
			castInPreSkill = false;
			preCastSkillId = 0;
			darkLightType = 0;
			followskill = 0;
			targetcnt = 0;
			excludemonstercnt = 0;

			AddState(new GState1());
			AddState(new GState2());
			AddState(new GState3());
			AddState(new GState4());
			AddState(new GState5());
		}
		public override int GetExecutetime(GSkill skill)
		{
			return 2000;
		}
		public override int GetCooldowntime(GSkill skill)
		{
			return 180000;
		}
		public override float GetRadius(GSkill skill)
		{
			return 5.000000f;
		}
		public override float GetPraydistance(GSkill skill)
		{
			return 18.000000f;
		}
		public override float GetCastdistance(GSkill skill)
		{
			return 15.000000f;
		}
		public override float GetEffectdistance(GSkill skill)
		{
			return 25.000000f;
		}
		public override float GetMpcost(GSkill skill)
		{
			return 1800.000000f;
		}
		public override int GetCoverage(GSkill skill)
		{
			return 40;
		}
	}
	public class GSkill5249 : GSkill
	{
		public GSkill5249()
			: base(5249)
		{
			
		}
	}
}
